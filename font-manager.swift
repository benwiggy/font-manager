#!/usr/bin/swift

// Command Line Tool to register and unregister (enable/disable) fonts on macOS.
// Fonts can be registered from any location. They do not need to be in the 
// standard font folders, e.g. /Library/Fonts.

// This script was generated by Code CoPilot AI...!!!

// v1.0. 

import Foundation
import CoreText

enum FontAction: String {
    case register = "register"
    case unregister = "unregister"
}

func registerFont(withPath path: String) -> Bool {
    let fontURL = URL(fileURLWithPath: path)
    let fontURLs = [fontURL] as CFArray

CTFontManagerRegisterFontURLs(fontURLs, .persistent, true) { (errors, done) -> Bool in
        if(done) {
            print("Successfully registered font at path: \(path)")
        } else {
        print("Failed to register font at path: \(path)")
        print(errors as Array)
        return false
        }
    return true
}
    return true
}


func unregisterFont(withPath path: String) -> Bool {
    let fontURL = URL(fileURLWithPath: path)
    let fontURLs = [fontURL] as CFArray

    CTFontManagerUnregisterFontURLs(fontURLs, .persistent) { (errors, done) -> Bool in
            if(done) {
                print("Successfully unregistered font at path: \(path)")
            } else {
            print("Failed to unregister font at path: \(path)")
            print(errors as Array)
            return false
            }
        return true
    }
        return true
    }

func printUsage() {
    print("Usage: font-manager.swift [register|unregister] /path/to/font.ttf")
}

// Main execution
let arguments = CommandLine.arguments

if arguments.count != 3 {
    printUsage()
    exit(1)
}

let action = arguments[1]
let fontPath = arguments[2]

guard let fontAction = FontAction(rawValue: action) else {
    printUsage()
    exit(1)
}

let result: Bool

switch fontAction {
case .register:
    result = registerFont(withPath: fontPath)
case .unregister:
    result = unregisterFont(withPath: fontPath)
}

if result {
    exit(0)
} else {
    exit(1)
}
